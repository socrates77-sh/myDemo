gplink-2.0.0_beta2 (Nov  6 2017)
Listing File Generated: 2017-12-19  11:53:46
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                                           ; Version 1.1.0 (Dec 19 2017) (MINGW32)
                                           ; This file was generated Tue Dec 19 11:53:46 2017
                                           ;--------------------------------------------------------
                                           ; MC35 port for the RISC core
                                           ;--------------------------------------------------------
                                           ;	.file	"type_long.c"
                                           	list	p=2K7041
                                           	radix dec
                                           	include "2K7041.inc"
                                           		LIST
                                           ;mc35p7041.inc    Standard Header File, Version 1.00 by Sinomcu
                                           		NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_HIBYTEbits
                                           	extern	_FSR0bits
                                           	extern	_FSR1bits
                                           	extern	_PFLAGbits
                                           	extern	_ZEROTRbits
                                           	extern	_OSCCALbits
                                           	extern	_WKCR0bits
                                           	extern	_WKCR5bits
                                           	extern	_ADIOS0bits
                                           	extern	_ADIOS1bits
                                           	extern	_ADIOS2bits
                                           	extern	_ADCR0bits
                                           	extern	_ADCR1bits
                                           	extern	_ADCR2bits
                                           	extern	_OEP0bits
                                           	extern	_EINTCRbits
                                           	extern	_OEP4bits
                                           	extern	_OEP5bits
                                           	extern	_INTFbits
                                           	extern	_INTEbits
                                           	extern	_OSCMbits
                                           	extern	_WDTCRbits
                                           	extern	_T1LDRbits
                                           	extern	_PCLbits
                                           	extern	_PCHbits
                                           	extern	_IOP0bits
                                           	extern	_IOP4bits
                                           	extern	_IOP5bits
                                           	extern	_T0CRbits
                                           	extern	_T0CNTbits
                                           	extern	_T1CRbits
                                           	extern	_T1CNTbits
                                           	extern	_BUZCRbits
                                           	extern	_MCRbits
                                           	extern	_PUP0bits
                                           	extern	_PUP4bits
                                           	extern	_PUP5bits
                                           	extern	_INDFbits
                                           	extern	_PWMCR0bits
                                           	extern	_PWMCR1bits
                                           	extern	_PWMCNTbits
                                           	extern	_PWMADTbits
                                           	extern	_PWMBDTbits
                                           	extern	_PWMCDTbits
                                           	extern	_PWMPDbits
                                           	extern	_HIBYTE
                                           	extern	_FSR0
                                           	extern	_FSR1
                                           	extern	_PFLAG
                                           	extern	_ZEROTR
                                           	extern	_OSCCAL
                                           	extern	_WKCR0
                                           	extern	_WKCR5
                                           	extern	_ADIOS0
                                           	extern	_ADIOS1
                                           	extern	_ADIOS2
                                           	extern	_ADCR0
                                           	extern	_ADCR1
                                           	extern	_ADRH
                                           	extern	_ADRL
                                           	extern	_ADCR2
                                           	extern	_OEP0
                                           	extern	_EINTCR
                                           	extern	_OEP4
                                           	extern	_OEP5
                                           	extern	_INTF
                                           	extern	_INTE
                                           	extern	_OSCM
                                           	extern	_WDTCR
                                           	extern	_T1LDR
                                           	extern	_PCL
                                           	extern	_PCH
                                           	extern	_IOP0
                                           	extern	_IOP4
                                           	extern	_IOP5
                                           	extern	_T0CR
                                           	extern	_T0CNT
                                           	extern	_T1CR
                                           	extern	_T1CNT
                                           	extern	_BUZCR
                                           	extern	_MCR
                                           	extern	_PUP0
                                           	extern	_PUP4
                                           	extern	_PUP5
                                           	extern	_INDF
                                           	extern	_PWMCR0
                                           	extern	_PWMCR1
                                           	extern	_PWMCNT
                                           	extern	_PWMADT
                                           	extern	_PWMBDT
                                           	extern	_PWMCDT
                                           	extern	_PWMPD
                                           	extern	_STKR0L
                                           	extern	_STKR0H
                                           	extern	_STKR1L
                                           	extern	_STKR1H
                                           	extern	_STKR2L
                                           	extern	_STKR2H
                                           	extern	_STKR3L
                                           	extern	_STKR3H
                                           	extern	_STKR4L
                                           	extern	_STKR4H
                                           	extern	_STKR5L
                                           	extern	_STKR5H
                                           	extern	_STKR6L
                                           	extern	_STKR6H
                                           	extern	_STKR7L
                                           	extern	_STKR7H
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           	global	_c_a
                                           	global	_c_b
                                           	global	_uc_a
                                           	global	_uc_b
                                           	global	_ram4
                                           	global	_ram3
                                           	global	_ram2
                                           	global	_ram1
                                           	global	_lram
                                           	global	_lram1
                                           
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0000
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_type_long_0	udata
                                           _c_a	res	4
                                           
                                           UD_type_long_1	udata
                                           _c_b	res	4
                                           
                                           UD_type_long_2	udata
                                           _uc_a	res	4
                                           
                                           UD_type_long_3	udata
                                           _uc_b	res	4
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           UD_abs_type_long_20	udata_ovr	0x0020
                                           _ram1
                                           	res	1
                                           UD_abs_type_long_21	udata_ovr	0x0021
                                           _ram2
                                           	res	1
                                           UD_abs_type_long_22	udata_ovr	0x0022
                                           _ram3
                                           	res	1
                                           UD_abs_type_long_23	udata_ovr	0x0023
                                           _ram4
                                           	res	1
                                           UD_abs_type_long_30	udata_ovr	0x0030
                                           _lram
                                           	res	4
                                           UD_abs_type_long_40	udata_ovr	0x0040
                                           _lram1
                                           	res	4
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ;@Allocation info for local variables in function 'main'
                                           ;@main main                      Allocated to registers ;size:2
                                           ;@main HIBYTEbits                Allocated to registers ;size:1
                                           ;@main FSR0bits                  Allocated to registers ;size:1
                                           ;@main FSR1bits                  Allocated to registers ;size:1
                                           ;@main PFLAGbits                 Allocated to registers ;size:1
                                           ;@main ZEROTRbits                Allocated to registers ;size:1
                                           ;@main OSCCALbits                Allocated to registers ;size:1
                                           ;@main WKCR0bits                 Allocated to registers ;size:1
                                           ;@main WKCR5bits                 Allocated to registers ;size:1
                                           ;@main ADIOS0bits                Allocated to registers ;size:1
                                           ;@main ADIOS1bits                Allocated to registers ;size:1
                                           ;@main ADIOS2bits                Allocated to registers ;size:1
                                           ;@main ADCR0bits                 Allocated to registers ;size:1
                                           ;@main ADCR1bits                 Allocated to registers ;size:1
                                           ;@main ADCR2bits                 Allocated to registers ;size:1
                                           ;@main OEP0bits                  Allocated to registers ;size:1
                                           ;@main EINTCRbits                Allocated to registers ;size:1
                                           ;@main OEP4bits                  Allocated to registers ;size:1
                                           ;@main OEP5bits                  Allocated to registers ;size:1
                                           ;@main INTFbits                  Allocated to registers ;size:1
                                           ;@main INTEbits                  Allocated to registers ;size:1
                                           ;@main OSCMbits                  Allocated to registers ;size:1
                                           ;@main WDTCRbits                 Allocated to registers ;size:1
                                           ;@main T1LDRbits                 Allocated to registers ;size:1
                                           ;@main PCLbits                   Allocated to registers ;size:1
                                           ;@main PCHbits                   Allocated to registers ;size:1
                                           ;@main IOP0bits                  Allocated to registers ;size:1
                                           ;@main IOP4bits                  Allocated to registers ;size:1
                                           ;@main IOP5bits                  Allocated to registers ;size:1
                                           ;@main T0CRbits                  Allocated to registers ;size:1
                                           ;@main T0CNTbits                 Allocated to registers ;size:1
                                           ;@main T1CRbits                  Allocated to registers ;size:1
                                           ;@main T1CNTbits                 Allocated to registers ;size:1
                                           ;@main BUZCRbits                 Allocated to registers ;size:1
                                           ;@main MCRbits                   Allocated to registers ;size:1
                                           ;@main PUP0bits                  Allocated to registers ;size:1
                                           ;@main PUP4bits                  Allocated to registers ;size:1
                                           ;@main PUP5bits                  Allocated to registers ;size:1
                                           ;@main INDFbits                  Allocated to registers ;size:1
                                           ;@main PWMCR0bits                Allocated to registers ;size:1
                                           ;@main PWMCR1bits                Allocated to registers ;size:1
                                           ;@main PWMCNTbits                Allocated to registers ;size:1
                                           ;@main PWMADTbits                Allocated to registers ;size:1
                                           ;@main PWMBDTbits                Allocated to registers ;size:1
                                           ;@main PWMCDTbits                Allocated to registers ;size:1
                                           ;@main PWMPDbits                 Allocated to registers ;size:1
                                           ;@main c_a                       Allocated to registers ;size:4
                                           ;@main c_b                       Allocated to registers ;size:4
                                           ;@main uc_a                      Allocated to registers ;size:4
                                           ;@main uc_b                      Allocated to registers ;size:4
                                           ;@main ram4                      Allocated to registers ;size:1
                                           ;@main ram3                      Allocated to registers ;size:1
                                           ;@main ram2                      Allocated to registers ;size:1
                                           ;@main ram1                      Allocated to registers ;size:1
                                           ;@main lram                      Allocated to registers ;size:4
                                           ;@main lram1                     Allocated to registers ;size:4
                                           ;@main HIBYTE                    Allocated to registers ;size:1
                                           ;@main FSR0                      Allocated to registers ;size:1
                                           ;@main FSR1                      Allocated to registers ;size:1
                                           ;@main PFLAG                     Allocated to registers ;size:1
                                           ;@main ZEROTR                    Allocated to registers ;size:1
                                           ;@main OSCCAL                    Allocated to registers ;size:1
                                           ;@main WKCR0                     Allocated to registers ;size:1
                                           ;@main WKCR5                     Allocated to registers ;size:1
                                           ;@main ADIOS0                    Allocated to registers ;size:1
                                           ;@main ADIOS1                    Allocated to registers ;size:1
                                           ;@main ADIOS2                    Allocated to registers ;size:1
                                           ;@main ADCR0                     Allocated to registers ;size:1
                                           ;@main ADCR1                     Allocated to registers ;size:1
                                           ;@main ADRH                      Allocated to registers ;size:1
                                           ;@main ADRL                      Allocated to registers ;size:1
                                           ;@main ADCR2                     Allocated to registers ;size:1
                                           ;@main OEP0                      Allocated to registers ;size:1
                                           ;@main EINTCR                    Allocated to registers ;size:1
                                           ;@main OEP4                      Allocated to registers ;size:1
                                           ;@main OEP5                      Allocated to registers ;size:1
                                           ;@main INTF                      Allocated to registers ;size:1
                                           ;@main INTE                      Allocated to registers ;size:1
                                           ;@main OSCM                      Allocated to registers ;size:1
                                           ;@main WDTCR                     Allocated to registers ;size:1
                                           ;@main T1LDR                     Allocated to registers ;size:1
                                           ;@main PCL                       Allocated to registers ;size:1
                                           ;@main PCH                       Allocated to registers ;size:1
                                           ;@main IOP0                      Allocated to registers ;size:1
                                           ;@main IOP4                      Allocated to registers ;size:1
                                           ;@main IOP5                      Allocated to registers ;size:1
                                           ;@main T0CR                      Allocated to registers ;size:1
                                           ;@main T0CNT                     Allocated to registers ;size:1
                                           ;@main T1CR                      Allocated to registers ;size:1
                                           ;@main T1CNT                     Allocated to registers ;size:1
                                           ;@main BUZCR                     Allocated to registers ;size:1
                                           ;@main MCR                       Allocated to registers ;size:1
                                           ;@main PUP0                      Allocated to registers ;size:1
                                           ;@main PUP4                      Allocated to registers ;size:1
                                           ;@main PUP5                      Allocated to registers ;size:1
                                           ;@main INDF                      Allocated to registers ;size:1
                                           ;@main PWMCR0                    Allocated to registers ;size:1
                                           ;@main PWMCR1                    Allocated to registers ;size:1
                                           ;@main PWMCNT                    Allocated to registers ;size:1
                                           ;@main PWMADT                    Allocated to registers ;size:1
                                           ;@main PWMBDT                    Allocated to registers ;size:1
                                           ;@main PWMCDT                    Allocated to registers ;size:1
                                           ;@main PWMPD                     Allocated to registers ;size:1
                                           ;@main STKR0L                    Allocated to registers ;size:1
                                           ;@main STKR0H                    Allocated to registers ;size:1
                                           ;@main STKR1L                    Allocated to registers ;size:1
                                           ;@main STKR1H                    Allocated to registers ;size:1
                                           ;@main STKR2L                    Allocated to registers ;size:1
                                           ;@main STKR2H                    Allocated to registers ;size:1
                                           ;@main STKR3L                    Allocated to registers ;size:1
                                           ;@main STKR3H                    Allocated to registers ;size:1
                                           ;@main STKR4L                    Allocated to registers ;size:1
                                           ;@main STKR4H                    Allocated to registers ;size:1
                                           ;@main STKR5L                    Allocated to registers ;size:1
                                           ;@main STKR5H                    Allocated to registers ;size:1
                                           ;@main STKR6L                    Allocated to registers ;size:1
                                           ;@main STKR6H                    Allocated to registers ;size:1
                                           ;@main STKR7L                    Allocated to registers ;size:1
                                           ;@main STKR7H                    Allocated to registers ;size:1
                                           ;@end Allocation info for local variables in function 'main';
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   8001     goto    0x1              	goto	_main
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_type_long	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;entry:  _main	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _main	;Function start
                                           ; 2 exit points
                                           ;	.line	29; "type_long.c"	c_a = 0x10092028;
000001   2d28     movai   0x28             	MOVAI	0x28
000002   1f24     movra   0x24             	MOVRA	_c_a
000003   2d20     movai   0x20             	MOVAI	0x20
000004   1f25     movra   0x25             	MOVRA	(_c_a + 1)
000005   2d09     movai   0x9              	MOVAI	0x09
000006   1f26     movra   0x26             	MOVRA	(_c_a + 2)
000007   2d10     movai   0x10             	MOVAI	0x10
000008   1f27     movra   0x27             	MOVRA	(_c_a + 3)
                                           ;	.line	30; "type_long.c"	lram = c_a;
000009   2d28     movai   0x28             	MOVAI	0x28
00000a   1f30     movra   0x30             	MOVRA	_lram
00000b   2d20     movai   0x20             	MOVAI	0x20
00000c   1f31     movra   0x31             	MOVRA	(_lram + 1)
00000d   2d09     movai   0x9              	MOVAI	0x09
00000e   1f32     movra   0x32             	MOVRA	(_lram + 2)
00000f   2d10     movai   0x10             	MOVAI	0x10
000010   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	37; "type_long.c"	c_b = 0xe44e6910;
000011   2d10     movai   0x10             	MOVAI	0x10
000012   1f28     movra   0x28             	MOVRA	_c_b
000013   2d69     movai   0x69             	MOVAI	0x69
000014   1f29     movra   0x29             	MOVRA	(_c_b + 1)
000015   2d4e     movai   0x4e             	MOVAI	0x4e
000016   1f2a     movra   0x2a             	MOVRA	(_c_b + 2)
000017   2de4     movai   0xe4             	MOVAI	0xe4
000018   1f2b     movra   0x2b             	MOVRA	(_c_b + 3)
                                           ;	.line	38; "type_long.c"	lram = c_b;
000019   2d10     movai   0x10             	MOVAI	0x10
00001a   1f30     movra   0x30             	MOVRA	_lram
00001b   2d69     movai   0x69             	MOVAI	0x69
00001c   1f31     movra   0x31             	MOVRA	(_lram + 1)
00001d   2d4e     movai   0x4e             	MOVAI	0x4e
00001e   1f32     movra   0x32             	MOVRA	(_lram + 2)
00001f   2de4     movai   0xe4             	MOVAI	0xe4
000020   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	46; "type_long.c"	uc_a = 0x23572028;
000021   2d28     movai   0x28             	MOVAI	0x28
000022   1f2c     movra   0x2c             	MOVRA	_uc_a
000023   2d20     movai   0x20             	MOVAI	0x20
000024   1f2d     movra   0x2d             	MOVRA	(_uc_a + 1)
000025   2d57     movai   0x57             	MOVAI	0x57
000026   1f2e     movra   0x2e             	MOVRA	(_uc_a + 2)
000027   2d23     movai   0x23             	MOVAI	0x23
000028   1f2f     movra   0x2f             	MOVRA	(_uc_a + 3)
                                           ;	.line	47; "type_long.c"	lram = uc_a;
000029   2d28     movai   0x28             	MOVAI	0x28
00002a   1f30     movra   0x30             	MOVRA	_lram
00002b   2d20     movai   0x20             	MOVAI	0x20
00002c   1f31     movra   0x31             	MOVRA	(_lram + 1)
00002d   2d57     movai   0x57             	MOVAI	0x57
00002e   1f32     movra   0x32             	MOVRA	(_lram + 2)
00002f   2d23     movai   0x23             	MOVAI	0x23
000030   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	54; "type_long.c"	uc_b = 0x9023e380;
000031   2d80     movai   0x80             	MOVAI	0x80
000032   1f34     movra   0x34             	MOVRA	_uc_b
000033   2de3     movai   0xe3             	MOVAI	0xe3
000034   1f35     movra   0x35             	MOVRA	(_uc_b + 1)
000035   2d23     movai   0x23             	MOVAI	0x23
000036   1f36     movra   0x36             	MOVRA	(_uc_b + 2)
000037   2d90     movai   0x90             	MOVAI	0x90
000038   1f37     movra   0x37             	MOVRA	(_uc_b + 3)
                                           ;	.line	55; "type_long.c"	lram = uc_b;
000039   2d80     movai   0x80             	MOVAI	0x80
00003a   1f30     movra   0x30             	MOVRA	_lram
00003b   2de3     movai   0xe3             	MOVAI	0xe3
00003c   1f31     movra   0x31             	MOVRA	(_lram + 1)
00003d   2d23     movai   0x23             	MOVAI	0x23
00003e   1f32     movra   0x32             	MOVRA	(_lram + 2)
00003f   2d90     movai   0x90             	MOVAI	0x90
000040   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	59; "type_long.c"	lram = (c_a + c_b);
000041   2d38     movai   0x38             	MOVAI	0x38
000042   1f30     movra   0x30             	MOVRA	_lram
000043   2d89     movai   0x89             	MOVAI	0x89
000044   1f31     movra   0x31             	MOVRA	(_lram + 1)
000045   2d57     movai   0x57             	MOVAI	0x57
000046   1f32     movra   0x32             	MOVRA	(_lram + 2)
000047   2df4     movai   0xf4             	MOVAI	0xf4
000048   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	60; "type_long.c"	ram4 = (c_a + c_b)>>24;    	   	   	// 0xf4578938
000049   2df4     movai   0xf4             	MOVAI	0xf4
00004a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	61; "type_long.c"	ram3 = (c_a + c_b)>>16;
00004b   2d57     movai   0x57             	MOVAI	0x57
00004c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	62; "type_long.c"	ram2 = (c_a + c_b)>>8;
00004d   2d89     movai   0x89             	MOVAI	0x89
00004e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	63; "type_long.c"	ram1 = (c_a + c_b);
00004f   2d38     movai   0x38             	MOVAI	0x38
000050   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	65; "type_long.c"	lram = (uc_a + uc_b);
000051   2da8     movai   0xa8             	MOVAI	0xa8
000052   1f30     movra   0x30             	MOVRA	_lram
000053   2d03     movai   0x3              	MOVAI	0x03
000054   1f31     movra   0x31             	MOVRA	(_lram + 1)
000055   2d7b     movai   0x7b             	MOVAI	0x7b
000056   1f32     movra   0x32             	MOVRA	(_lram + 2)
000057   2db3     movai   0xb3             	MOVAI	0xb3
000058   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	66; "type_long.c"	ram4 = (uc_a + uc_b)>>24;      	   	   	// 0xb37b03a8
000059   2db3     movai   0xb3             	MOVAI	0xb3
00005a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	67; "type_long.c"	ram3 = (uc_a + uc_b)>>16;
00005b   2d7b     movai   0x7b             	MOVAI	0x7b
00005c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	68; "type_long.c"	ram2 = (uc_a + uc_b)>>8;
00005d   2d03     movai   0x3              	MOVAI	0x03
00005e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	69; "type_long.c"	ram1 = (uc_a + uc_b);
00005f   2da8     movai   0xa8             	MOVAI	0xa8
000060   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	71; "type_long.c"	lram = (c_a - c_b);
000061   2d18     movai   0x18             	MOVAI	0x18
000062   1f30     movra   0x30             	MOVRA	_lram
000063   2db7     movai   0xb7             	MOVAI	0xb7
000064   1f31     movra   0x31             	MOVRA	(_lram + 1)
000065   2dba     movai   0xba             	MOVAI	0xba
000066   1f32     movra   0x32             	MOVRA	(_lram + 2)
000067   2d2b     movai   0x2b             	MOVAI	0x2b
000068   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	72; "type_long.c"	ram4 = (c_a - c_b)>>24;        	   	   	// 0x2bbab718
000069   2d2b     movai   0x2b             	MOVAI	0x2b
00006a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	73; "type_long.c"	ram3 = (c_a - c_b)>>16;
00006b   2dba     movai   0xba             	MOVAI	0xba
00006c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	74; "type_long.c"	ram2 = (c_a - c_b)>>8;
00006d   2db7     movai   0xb7             	MOVAI	0xb7
00006e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	75; "type_long.c"	ram1 = (c_a - c_b);
00006f   2d18     movai   0x18             	MOVAI	0x18
000070   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	77; "type_long.c"	lram = (uc_a - uc_b);
000071   2da8     movai   0xa8             	MOVAI	0xa8
000072   1f30     movra   0x30             	MOVRA	_lram
000073   2d3c     movai   0x3c             	MOVAI	0x3c
000074   1f31     movra   0x31             	MOVRA	(_lram + 1)
000075   2d33     movai   0x33             	MOVAI	0x33
000076   1f32     movra   0x32             	MOVRA	(_lram + 2)
000077   2d93     movai   0x93             	MOVAI	0x93
000078   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	78; "type_long.c"	ram4 = (uc_a - uc_b)>>24;          	   	   	// 0x93333ca8
000079   2d93     movai   0x93             	MOVAI	0x93
00007a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	79; "type_long.c"	ram3 = (uc_a - uc_b)>>16;
00007b   2d33     movai   0x33             	MOVAI	0x33
00007c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	80; "type_long.c"	ram2 = (uc_a - uc_b)>>8;
00007d   2d3c     movai   0x3c             	MOVAI	0x3c
00007e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	81; "type_long.c"	ram1 = (uc_a - uc_b);
00007f   2da8     movai   0xa8             	MOVAI	0xa8
000080   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	83; "type_long.c"	lram = (uc_a + c_b);
000081   2d38     movai   0x38             	MOVAI	0x38
000082   1f30     movra   0x30             	MOVRA	_lram
000083   2d89     movai   0x89             	MOVAI	0x89
000084   1f31     movra   0x31             	MOVRA	(_lram + 1)
000085   2da5     movai   0xa5             	MOVAI	0xa5
000086   1f32     movra   0x32             	MOVRA	(_lram + 2)
000087   2d07     movai   0x7              	MOVAI	0x07
000088   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	84; "type_long.c"	ram4 = (uc_a + c_b)>>24;       	   	   	// 0x07a58938
000089   2d07     movai   0x7              	MOVAI	0x07
00008a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	85; "type_long.c"	ram3 = (uc_a + c_b)>>16;
00008b   2da5     movai   0xa5             	MOVAI	0xa5
00008c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	86; "type_long.c"	ram2 = (uc_a + c_b)>>8;
00008d   2d89     movai   0x89             	MOVAI	0x89
00008e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	87; "type_long.c"	ram1 = (uc_a + c_b);
00008f   2d38     movai   0x38             	MOVAI	0x38
000090   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	89; "type_long.c"	lram = (c_a + uc_b);
000091   2da8     movai   0xa8             	MOVAI	0xa8
000092   1f30     movra   0x30             	MOVRA	_lram
000093   2d03     movai   0x3              	MOVAI	0x03
000094   1f31     movra   0x31             	MOVRA	(_lram + 1)
000095   2d2d     movai   0x2d             	MOVAI	0x2d
000096   1f32     movra   0x32             	MOVRA	(_lram + 2)
000097   2da0     movai   0xa0             	MOVAI	0xa0
000098   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	90; "type_long.c"	ram4 = (c_a + uc_b)>>24;           	   	   	// 0xa02d03a8
000099   2da0     movai   0xa0             	MOVAI	0xa0
00009a   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	91; "type_long.c"	ram3 = (c_a + uc_b)>>16;
00009b   2d2d     movai   0x2d             	MOVAI	0x2d
00009c   1f22     movra   0x22             	MOVRA	_ram3
                                           ;	.line	92; "type_long.c"	ram2 = (c_a + uc_b)>>8;
00009d   2d03     movai   0x3              	MOVAI	0x03
00009e   1f21     movra   0x21             	MOVRA	_ram2
                                           ;	.line	93; "type_long.c"	ram1 = (c_a + uc_b);
00009f   2da8     movai   0xa8             	MOVAI	0xa8
0000a0   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	95; "type_long.c"	lram = (uc_a - c_b);
0000a1   2b30     clrr    0x30             	CLRR	_lram
0000a2   2b31     clrr    0x31             	CLRR	(_lram + 1)
0000a3   2b32     clrr    0x32             	CLRR	(_lram + 2)
0000a4   2d80     movai   0x80             	MOVAI	0x80
0000a5   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	96; "type_long.c"	ram4 = (uc_a - c_b)>>24;       	   	   	// 0x80000000?
0000a6   2d80     movai   0x80             	MOVAI	0x80
0000a7   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	97; "type_long.c"	ram3 = (uc_a - c_b)>>16;
0000a8   2b22     clrr    0x22             	CLRR	_ram3
                                           ;	.line	98; "type_long.c"	ram2 = (uc_a - c_b)>>8;
0000a9   2b21     clrr    0x21             	CLRR	_ram2
                                           ;	.line	99; "type_long.c"	ram1 = (uc_a - c_b);
0000aa   2d18     movai   0x18             	MOVAI	0x18
0000ab   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	101; "type_long.c"	lram = (c_a - uc_b);
0000ac   2b30     clrr    0x30             	CLRR	_lram
0000ad   2b31     clrr    0x31             	CLRR	(_lram + 1)
0000ae   2b32     clrr    0x32             	CLRR	(_lram + 2)
0000af   2d80     movai   0x80             	MOVAI	0x80
0000b0   1f33     movra   0x33             	MOVRA	(_lram + 3)
                                           ;	.line	102; "type_long.c"	ram4 = (c_a - uc_b)>>24;           	   	   	// 0x80000000?
0000b1   2d80     movai   0x80             	MOVAI	0x80
0000b2   1f23     movra   0x23             	MOVRA	_ram4
                                           ;	.line	103; "type_long.c"	ram3 = (c_a - uc_b)>>16;
0000b3   2b22     clrr    0x22             	CLRR	_ram3
                                           ;	.line	104; "type_long.c"	ram2 = (c_a - uc_b)>>8;
0000b4   2b21     clrr    0x21             	CLRR	_ram2
                                           ;	.line	105; "type_long.c"	ram1 = (c_a - uc_b);
0000b5   2da8     movai   0xa8             	MOVAI	0xa8
0000b6   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	109; "type_long.c"	if (c_a > 0) ram1 = c_a;   	   	   	// true
0000b7   2d28     movai   0x28             	MOVAI	0x28
0000b8   1f20     movra   0x20             	MOVRA	_ram1
                                           ;	.line	110; "type_long.c"	if (uc_a > 0) ram1 = c_a + 1;      	// true
0000b9   2d29     movai   0x29             	MOVAI	0x29
0000ba   1f20     movra   0x20             	MOVRA	_ram1
                                           _00114_DS_
                                           ;	.line	115; "type_long.c"	while(1);
0000bb   80bb     goto    0xbb             	GOTO	_00114_DS_
0000bc   0e00     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           
                                           ;	code size estimation:
                                           ;	  188+    0 =   188 instructions (  376 byte)
                                           
                                           	end


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXX------

All other memory blocks unused.

Program Memory Words Used:   189

