gplink-2.0.0_beta2 (Nov  6 2017)
Listing File Generated: 2017-11-19  16:48:45
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                                           ; Version 1.0.0 (Sep 28 2017) (MINGW32)
                                           ; This file was generated Sun Nov 19 16:48:45 2017
                                           ;--------------------------------------------------------
                                           ; MC35 port for the RISC core
                                           ;--------------------------------------------------------
                                           ;	.file	"static.c"
                                           	list	p=2K7041
                                           	radix dec
                                           	include "2K7041.inc"
                                           		LIST
                                           ;mc35p7041.inc    Standard Header File, Version 1.00 by Sinomcu
                                           		NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_INDF
                                           	extern	_HIBYTE
                                           	extern	_FSR
                                           	extern	_FSR0
                                           	extern	_FSR1
                                           	extern	_PCH
                                           	extern	_PCL
                                           	extern	_STATUS
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           	global	_ram1
                                           	global	_ram0
                                           
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0000
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           UD_abs_static_20	udata_ovr	0x0020
                                           _ram0
                                           	res	1
                                           UD_abs_static_21	udata_ovr	0x0021
                                           _ram1
                                           	res	1
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_static_0	udata
                                           r0x1001	res	1
                                           _main_c_a_1_2	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ;@Allocation info for local variables in function 'main'
                                           ;@main main                      Allocated to registers ;size:2
                                           ;@main STATUSbits                Allocated to registers ;size:1
                                           ;@main ram1                      Allocated to registers ;size:1
                                           ;@main ram0                      Allocated to registers ;size:1
                                           ;@main c_a                       Allocated to registers ;size:1
                                           ;@main c_b                       Allocated to registers r0x1001 ;size:1
                                           ;@main INDF                      Allocated to registers ;size:1
                                           ;@main HIBYTE                    Allocated to registers ;size:1
                                           ;@main FSR                       Allocated to registers ;size:1
                                           ;@main FSR0                      Allocated to registers ;size:1
                                           ;@main FSR1                      Allocated to registers ;size:1
                                           ;@main PCH                       Allocated to registers ;size:1
                                           ;@main PCL                       Allocated to registers ;size:1
                                           ;@main STATUS                    Allocated to registers ;size:1
                                           ;@end Allocation info for local variables in function 'main';
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   8001     goto    0x1              	goto	_main
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_static	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;entry:  _main	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1001
                                           ;; Starting pCode block
                                           _main	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "static.c"	ram0 = 0x53;
000001   2d53     movai   0x53             	MOVAI	0x53
000002   1f20     movra   0x20             	MOVRA	_ram0
                                           ;	.line	12; "static.c"	ram1 = 0x78;
000003   2d78     movai   0x78             	MOVAI	0x78
000004   1f21     movra   0x21             	MOVRA	_ram1
                                           ;	.line	14; "static.c"	c_a = ram0;
000005   1e20     movar   0x20             	MOVAR	_ram0
000006   1f08     movra   0x8              	MOVRA	_main_c_a_1_2
                                           ;	.line	15; "static.c"	c_b = ram1;
000007   1e21     movar   0x21             	MOVAR	_ram1
000008   1f07     movra   0x7              	MOVRA	r0x1001
                                           ;	.line	17; "static.c"	ram0 = c_a + c_b;  	// 0xcb
000009   1e07     movar   0x7              	MOVAR	r0x1001
00000a   1208     addar   0x8              	ADDAR	_main_c_a_1_2
00000b   1f20     movra   0x20             	MOVRA	_ram0
                                           ;	.line	18; "static.c"	ram1 = c_a - c_b;  	// 0xdb
00000c   1e07     movar   0x7              	MOVAR	r0x1001
00000d   2c08     xch     0x8              	XCH	_main_c_a_1_2
00000e   2308     asubra  0x8              	ASUBRA	_main_c_a_1_2
00000f   2c08     xch     0x8              	XCH	_main_c_a_1_2
000010   1f21     movra   0x21             	MOVRA	_ram1
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;signed compare: left >= lit(0x1=1), size=1, mask=ff
                                           ;	.line	20; "static.c"	if (c_a > 0) ram0 = c_b;   	// true
000011   1e08     movar   0x8              	MOVAR	_main_c_a_1_2
000012   1480     addai   0x80             	ADDAI	0x80
000013   147f     addai   0x7f             	ADDAI	0x7f
000014   5a86     jbset   0x86, 0x2        	JBSET	STATUS,2
000015   8018     goto    0x18             	GOTO	_00106_DS_
                                           ;;genSkipc:3223: created from rifx:00D5608C
000016   1e07     movar   0x7              	MOVAR	r0x1001
000017   1f20     movra   0x20             	MOVRA	_ram0
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;signed compare: left >= lit(0xFFFFFFFE=-2), size=1, mask=ff
                                           _00106_DS_
                                           ;	.line	22; "static.c"	if (c_a > -3) ram0 = c_b+1;	// true
000018   1e08     movar   0x8              	MOVAR	_main_c_a_1_2
000019   1480     addai   0x80             	ADDAI	0x80
00001a   1482     addai   0x82             	ADDAI	0x82
00001b   5a86     jbset   0x86, 0x2        	JBSET	STATUS,2
00001c   8020     goto    0x20             	GOTO	_00110_DS_
                                           ;;genSkipc:3223: created from rifx:00D5608C
00001d   1507     jzar    0x7              	JZAR	r0x1001
00001e   0000     nop                      	NOP	
00001f   1f20     movra   0x20             	MOVRA	_ram0
                                           _00110_DS_
                                           ;	.line	24; "static.c"	while(1);
000020   8020     goto    0x20             	GOTO	_00110_DS_
000021   0e00     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           
                                           ;	code size estimation:
                                           ;	   33+    0 =    33 instructions (   66 byte)
                                           
                                           	end


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXX------------ ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    34

