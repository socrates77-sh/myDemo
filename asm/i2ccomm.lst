gpasm-1.9.8 (Jun  2 2017)    i2ccomm.asm        2017-6-2  19:19:02           PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include 0311.inc 
                      00001                 LIST
                      00002 ;mc30p011.inc    Standard Header File, Version 1.00 by Sinomcu
                      00225                 LIST
                      00002 #include  "i2ccomm.inc"       
                      00001 #include  "flags.inc"            ; required include file
                      00001  
                      00002 ; bits for variable sflag_event
                      00003 #define  sh1         0                   ; place holder
                      00004 #define  sh2         1                   ; place holder
                      00005 #define  sh3         2                   ; place holder
                      00006 #define  sh4         3                   ; place holder
                      00007 #define  sh5         4                   ; place holder
                      00008 #define  sh6         5                   ; place holder
                      00009 #define  sh7         6                   ; place holder
                      00010 #define  rw_done     7                   ; flag bit
                      00011 
                      00012 
                      00013 ; bits for variable eflag_event
                      00014 #define  ack_error   0                   ; flag bit
                      00015 #define  eh1         1                   ; place holder
                      00016 #define  eh2         2                   ; place holder
                      00017 #define  eh3         3                   ; place holder
                      00018 #define  eh4         4                   ; place holder
                      00019 #define  eh5         5                   ; place holder
                      00020 #define  eh6         6                   ; place holder
                      00021 #define  eh7         7                   ; place holder
                      00002 
  0000000F            00003 i2cSizeMask             EQU             0x0F
                      00004 
                      00005 
                      00006         GLOBAL          sflag_event          ; make variable viewable for other modules 
                      00007         GLOBAL          eflag_event          ; make variable viewable for other modules
                      00008         GLOBAL          i2cState             ; make variable viewable for other modules
                      00009         GLOBAL          read_count           ; make variable viewable for other modules
                      00010         GLOBAL          write_count          ; make variable viewable for other modules
                      00011         GLOBAL          write_ptr            ; make variable viewable for other modules
                      00012         GLOBAL          read_ptr             ; make variable viewable for other modules
                      00013         GLOBAL          temp_address         ; make variable viewable for other modules
                      00014 
                      00015         GLOBAL          init_i2c             ; make function viewable for other modules
                      00016         GLOBAL          service_i2c          ; make function viewable for other modules
                      00017 
                      00018 
                      00019 
                      00020 ;*******    GENERAL PURPOSE VARIABLES
                      00021 GPR_DATA                UDATA
0000                  00022 sflag_event      RES     1               ; variable for i2c general status flags
0000                  00023 eflag_event      RES     1               ; variable for i2c error status flags
0001                  00024 i2cState         RES     1               ; I2C state machine variable
0001                  00025 read_count       RES     1               ; variable used for slave read byte count
0002                  00026 write_count      RES     1               ; variable used for slave write byte count
0002                  00027 write_ptr        RES     1               ; variable used for pointer (writes to)
0003                  00028 read_ptr         RES     1               ; variable used for pointer (reads from)
0003                  00029 temp_address     RES     1               ; variable used for passing address to functions
                      00030                 
                      00031 
                      00003 
                      00004 #define  FOSC        D'8000000'
                      00005 #define  I2CClock    D'400000'
                      00006 #define  ClockValue  (((FOSC/I2CClock)/4) -1) ; 
                      00007         
                      00008 
                      00009 ;----------------------------------------------------------------------
                      00010 ;   ***********************  I2C Service  *************************
                      00011 ;----------------------------------------------------------------------
                      00012 I2C_COMM        CODE    
0000                  00013 service_i2c:
0000   0B00           00014         movai high I2CJump
0001   158A           00015         movra PCLATH
0002   0B0F           00016         movai i2cSizeMask
0003   1E00           00017         andar i2cState
0004   0E00           00018         addai low (I2CJump + 1)
0005   3403           00019         jbclr STATUS, C
0006   198A           00020         incr PCLATH
0007                  00021 I2CJump:
0007   1582           00022         movra PCL
                      00023 
0008   2800           00024         goto WrtStart
0009   2800           00025         goto SendWrtAddr
000A   2800           00026         goto WrtAckTest
000B   2800           00027         goto WrtStop
                      00028 
000C   2800           00029         goto ReadStart
000D   2800           00030         goto SendReadAddr
000E   2800           00031         goto ReadAckTest
000F   2800           00032         goto ReadData
0010   2800           00033         goto ReadStop
                      00034 
0011                  00035 I2CJumpEnd               
0011   000C 000C 000C 00036         Fill (return),  (I2CJump-I2CJumpEnd) + i2cSizeMask 
       000C 000C      
                      00037 
                      00038 
                      00039 
                      00040 
                      00041 ;----------------------------------------------------------------------
                      00042 ;   ********************* Write data to Slave   *********************
                      00043 ;----------------------------------------------------------------------
                      00044 ; Generate I2C bus start condition               [ I2C STATE -> 0 ]
0016                  00045 WrtStart
0016   1600           00046         movar write_ptr
0017   1584           00047         movra FSR
0018   1980           00048         incr i2cState
0019   3805           00049         bset P0, 0
001A   000C           00050         return
                      00051 
                      00052 ; Generate I2C address write (R/W=0)             [ I2C STATE -> 1 ]
001B                  00053 SendWrtAddr
001B   3C03           00054         bclr STATUS, C
001C   1480           00055         rlr temp_address
001D   1980           00056         incr i2cState
001E   000C           00057         return
                      00058 
                      00059 ; Test acknowledge after address and data write  [ I2C STATE -> 2 ]
001F                  00060 WrtAckTest
001F   3085           00061         jbset P0, 1
0020   2800           00062         goto WrtData
0021   3800           00063         bset eflag_event, ack_error
0022   1D80           00064         clrr i2cState
0023   000C           00065         return
                      00066 
                      00067 ; Generate I2C write data condition
0024                  00068 WrtData
0024   1600           00069         movar INDF
0025   3105           00070         jbset P0, 2
0026   2800           00071         goto send_byte
0027   1980           00072         incr i2cState
0028                  00073 send_byte
0028   1586           00074         movra P1
0029   000C           00075         return
                      00076 
                      00077 ; Generate I2C bus stop condition                [ I2C STATE -> 3 ]
002A                  00078 WrtStop
002A   3185           00079         jbset P0, 3
002B   2800           00080         goto no_error
002C   3800           00081         bset eflag_event, ack_error
002D   1D80           00082         clrr i2cState
002E   2800           00083         goto stop1
002F                  00084 no_error
002F   1980           00085         incr i2cState
0030                  00086 stop1
0030   3886           00087         bset P1, 1
0031   000C           00088         return
                      00089 
                      00090 ;----------------------------------------------------------------------
                      00091 ;   ********************* Read data from Slave   *********************
                      00092 ;----------------------------------------------------------------------
                      00093 ; Generate I2C start condition                   [ I2C STATE -> 4 ]
0032                  00094 ReadStart
0032   1600           00095         movar read_ptr
0033   1584           00096         movra FSR
0034   1980           00097         incr i2cState
0035   3806           00098         bset P1, 0
0036   000C           00099         return
                      00100 
                      00101 ; Generate I2C address write (R/W=1)             [ I2C STATE -> 5 ]
0037                  00102 SendReadAddr 
0037   3803           00103         bset STATUS, C
0038   1480           00104         rlr temp_address
0039   1980           00105         incr i2cState
003A   000C           00106         return
                      00107 
                      00108 ; Test acknowledge after address write           [ I2C STATE -> 6 ]
003B                  00109 ReadAckTest
003B   3106           00110         jbset P1, 2
003C   2800           00111         goto StartReadData
003D   3800           00112         bset eflag_event, ack_error
003E   1D80           00113         clrr i2cState
003F   000C           00114         return
                      00115 
0040                  00116 StartReadData
0040   1980           00117         incr i2cState
0041   000C           00118         return
                      00119 
                      00120 ; Read slave I2C                                 [ I2C STATE -> 7 ]
0042                  00121 ReadData
0042   1A80           00122         djzr read_count
0043   2800           00123         goto SendReadAck
                      00124 
                      00125 ; Send Not Acknowledge
0044                  00126 SendReadNack
0044   1580           00127         movra INDF
0045   1980           00128         incr i2cState
0046   000C           00129         return
                      00130 
                      00131 ; Send Acknowledge
0047                  00132 SendReadAck
0047   1580           00133         movra INDF
0048   1984           00134         incr FSR
0049   2800           00135         goto $-1
004A   3906           00136         bset P1, 2
004B   000C           00137         return
                      00138 
                      00139 ; Generate I2C stop condition                    [ I2C STATE -> 8 ]
004C                  00140 ReadStop
004C   3D06           00141         bclr P1, 2
004D   1D80           00142         clrr i2cState
004E   3B80           00143         bset sflag_event, rw_done
004F   000C           00144         return
                      00145         
                      00146 ;----------------------------------------------------------------------
                      00147 ;   ******************* Generic bus idle check ***********************
                      00148 ;----------------------------------------------------------------------
                      00149 ; test for i2c bus idle state; not implemented in this code (example only)
0050                  00150 i2c_idle   
0050   1586           00151         movra P1
0051   0D1F           00152         andai 0x1f
0052   3103           00153         jbset STATUS, Z
0053   2800           00154         goto $-3
0054   000C           00155         return
                      00156 
                      00157 ;----------------------------------------------------------------------
                      00158 ;  ******************* INITIALIZE MSSP MODULE  *******************
                      00159 ;----------------------------------------------------------------------
                      00160 
0055                  00161 init_i2c
0055   0B04           00162         movai ClockValue
0056   0B18           00163         movai b'00011000'
                      00164         ;iost 5
0057   000C           00165         return
                      00166 
                      00167         end
gpasm-1.9.8 (Jun  2 2017)    i2ccomm.asm        2017-6-2  19:19:02           PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

BUZOUT                            00000005
C                                 00000000
DC                                00000001
DDR0                              00000045
DDR00                             00000000
DDR01                             00000001
DDR02                             00000002
DDR03                             00000003
DDR1                              00000046
DDR10                             00000000
DDR11                             00000001
DDR12                             00000002
DDR14                             00000004
DDR15                             00000005
DDR16                             00000006
DDR17                             00000007
EIS                               00000006
FSR                               00000004
GIE                               00000007
I2CJump                           00000007
I2CJumpEnd                        00000011
INDF                              00000000
INT0IE                            00000002
INT0IF                            00000002
INT0M                             00000006
INTECON                           0000000E
INTFLAG                           0000000F
KBIE                              00000001
KBIF                              00000001
KBIM                              00000009
KBIM0                             00000000
KBIM1                             00000001
KBIM2                             00000002
KBIM3                             00000003
KBIM4                             00000004
KBIM5                             00000005
KBIM6                             00000006
KBIM7                             00000007
MCR                               00000008
ODCON                             0000000C
P0                                00000005
P00                               00000000
P00PD                             00000000
P01                               00000001
P01PD                             00000001
P02                               00000002
P02PD                             00000002
P03                               00000003
P03PD                             00000003
P1                                00000006
P10                               00000000
P10OD                             00000000
P10PD                             00000004
P10PU                             00000000
P11                               00000001
P11OD                             00000001
P11PD                             00000005
P11PU                             00000001
P12                               00000002
P12OD                             00000002
P12PD                             00000006
P12PU                             00000002
P13                               00000003
P14                               00000004
P14OD                             00000004
P14PU                             00000004
P15                               00000005
P15OD                             00000005
P15PU                             00000005
P16                               00000006
P16OD                             00000006
P16PU                             00000006
P17                               00000007
P17OD                             00000007
P17PU                             00000007
PCL                               00000002
PCLATH                            0000000A
PD                                00000003
PDCON                             0000000B
PUCON                             0000000D
PWMOUT                            00000006
RST                               00000007
ReadAckTest                       0000003B
ReadData                          00000042
ReadStart                         00000032
ReadStop                          0000004C
STATUS                            00000003
SendReadAck                       00000047
SendReadAddr                      00000037
SendReadNack                      00000044
SendWrtAddr                       0000001B
StartReadData                     00000040
T0CNT                             00000001
T0CR                              00000041
T0IE                              00000000
T0IF                              00000000
T0PTA                             00000003
T0PTS                             00000005
T0SE                              00000004
T1CNT                             0000004D
T1CR                              0000004C
T1DATA                            0000004F
T1IE                              00000001
T1IF                              00000000
T1LOAD                            0000004E
TBS                               00000007
TMCR                              0000004B
TMR1EN                            00000007
TO                                00000004
WDTEN                             00000007
WrtAckTest                        0000001F
WrtData                           00000024
WrtStart                          00000016
WrtStop                           0000002A
Z                                 00000002
_CONFIG0                          00002000
_CONFIG1                          00002001
_CP_ALL                           00001FFF
_FCPU_2T                          00003F7F
_FCPU_4T                          00003FFF
_I2C_COMM_0049                    00000049
_I2C_COMM_0053                    00000053
_IRC_1M                           00003FCF
_IRC_2M                           00003FDF
_IRC_444K                         00003FAF
_IRC_4M                           00003FEF
_IRC_8M                           00003FFF
_MCLR_OFF                         00003FF7
_MCLR_ON                          00003FFF
_OSC_HXT                          00002FFF
_OSC_IRC                          000037FF
_OSC_IRC_RTC                      00003FFF
_OSC_LXT                          000027FF
_PWRT_OFF                         00003BFF
_PWRT_ON                          00003FFF
_RD_FROM_PIN                      00003FFF
_RD_FROM_REG                      00003EFF
_SMT_OFF                          00003FFF
_SMT_ON                           00003DFF
_TWDT_18MS                        00003FFF
_TWDT_288MS                       00003DFF
_TWDT_4P5MS                       00003EFF
_TWDT_72MS                        00003CFF
_VBOR_15                          00003FF8
_VBOR_18                          00003FF9
_VBOR_20                          00003FFA
_VBOR_22                          00003FFB
_VBOR_24                          00003FFC
_VBOR_26                          00003FFD
_VBOR_30                          00003FFE
_VBOR_36                          00003FFF
_WDT_OFF                          000037FF
_WDT_ON                           00003FFF
__30P011                          00000001
eflag_event                       00000001
i2cSizeMask                       0000000F
i2cState                          00000002
i2c_idle                          00000050
init_i2c                          00000055
no_error                          0000002F
read_count                        00000003
read_ptr                          00000006
send_byte                         00000028
service_i2c                       00000000
sflag_event                       00000000
stop1                             00000030
temp_address                      00000007
write_count                       00000004
write_ptr                         00000005
ClockValue                        (((FOSC/I2CClock)/4) -1)
FOSC                              D'8000000'
I2CClock                          D'400000'
ack_error                         0
eh1                               1
eh2                               2
eh3                               3
eh4                               4
eh5                               5
eh6                               6
eh7                               7
rw_done                           7
sh1                               0
sh2                               1
sh3                               2
sh4                               3
sh5                               4
sh6                               5
sh7                               6

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

